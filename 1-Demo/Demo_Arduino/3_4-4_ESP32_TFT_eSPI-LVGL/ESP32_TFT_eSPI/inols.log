






Started logging.

<<<
Content-Length: 3289

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10052,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\zhang'pei\\Desktop\\ESP32-2432S028例子\\arduino\\Source code\\3_4-4_ESP32_TFT_eSPI-LVGL\\ESP32_TFT_eSPI","rootUri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","name":"ESP32_TFT_eSPI"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2656

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI/ESP32_TFT_eSPI.ino","languageId":"cpp","version":1,"text":"#include <lvgl.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI(); /* TFT instance */\nstatic lv_disp_buf_t disp_buf;\nstatic lv_color_t buf[LV_HOR_RES_MAX * 10];\n\n#if USE_LV_LOG != 0\n/* Serial debugging */\nvoid my_print(lv_log_level_t level, const char * file, uint32_t line, const char * dsc)\n{\n\n    Serial.printf(\"%s@%d->%s\\r\\n\", file, line, dsc);\n    Serial.flush();\n}\n#endif\n\n/* Display flushing */\nvoid my_disp_flush(lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p)\n{\n    uint32_t w = (area->x2 - area->x1 + 1);\n    uint32_t h = (area->y2 - area->y1 + 1);\n\n    tft.startWrite();\n    tft.setAddrWindow(area->x1, area->y1, w, h);\n    tft.pushColors(&color_p->full, w * h, true);\n    tft.endWrite();\n\n    lv_disp_flush_ready(disp);\n}\n\n/* Reading input device (simulated encoder here) */\nbool read_encoder(lv_indev_drv_t * indev, lv_indev_data_t * data)\n{\n    static int32_t last_diff = 0;\n    int32_t diff = 0; /* Dummy - no movement */\n    int btn_state = LV_INDEV_STATE_REL; /* Dummy - no press */\n\n    data->enc_diff = diff - last_diff;;\n    data->state = btn_state;\n\n    last_diff = diff;\n\n    return false;\n}\n\nvoid setup()\n{\n\n    Serial.begin(115200); /* prepare for possible serial debug */\n\n    lv_init();\n\n#if USE_LV_LOG != 0\n    lv_log_register_print_cb(my_print); /* register print function for debugging */\n#endif\n\n    tft.begin(); /* TFT init */\n    tft.setRotation(1); /* Landscape orientation */\n\n    lv_disp_buf_init(&disp_buf, buf, NULL, LV_HOR_RES_MAX * 10);\n\n    /*Initialize the display*/\n    lv_disp_drv_t disp_drv;\n    lv_disp_drv_init(&disp_drv);\n    disp_drv.hor_res = 320;\n    disp_drv.ver_res = 240;\n    disp_drv.flush_cb = my_disp_flush;\n    disp_drv.buffer = &disp_buf;\n    lv_disp_drv_register(&disp_drv);\n\n    /*Initialize the (dummy) input device driver*/\n    lv_indev_drv_t indev_drv;\n    lv_indev_drv_init(&indev_drv);\n    indev_drv.type = LV_INDEV_TYPE_ENCODER;\n    indev_drv.read_cb = read_encoder;\n    lv_indev_drv_register(&indev_drv);\n\n    /* Create simple label */\n    lv_obj_t *label = lv_label_create(lv_scr_act(), NULL);\n    lv_label_set_text(label, \"Hello Arduino! (V7.0.X)\");\n    lv_obj_align(label, NULL, LV_ALIGN_CENTER, 0, 0);\n}\n\n\nvoid loop()\n{\n\n    lv_task_handler(); /* let the GUI do its work */\n    delay(5);\n}\n"}}}






Started logging.

<<<
Content-Length: 3288

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2020,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\zhang'pei\\Desktop\\ESP32-2432S028例子\\arduino\\Source code\\3_4-4_ESP32_TFT_eSPI-LVGL\\ESP32_TFT_eSPI","rootUri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","name":"ESP32_TFT_eSPI"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2717

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI/ESP32_TFT_eSPI.ino","languageId":"cpp","version":1,"text":"// Example for library:\n// Lv_arduino by Gabor Kiss-Vamosi\n#include <lvgl.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI(); /* TFT instance */\nstatic lv_disp_buf_t disp_buf;\nstatic lv_color_t buf[LV_HOR_RES_MAX * 10];\n\n#if USE_LV_LOG != 0\n/* Serial debugging */\nvoid my_print(lv_log_level_t level, const char * file, uint32_t line, const char * dsc)\n{\n\n    Serial.printf(\"%s@%d->%s\\r\\n\", file, line, dsc);\n    Serial.flush();\n}\n#endif\n\n/* Display flushing */\nvoid my_disp_flush(lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p)\n{\n    uint32_t w = (area->x2 - area->x1 + 1);\n    uint32_t h = (area->y2 - area->y1 + 1);\n\n    tft.startWrite();\n    tft.setAddrWindow(area->x1, area->y1, w, h);\n    tft.pushColors(&color_p->full, w * h, true);\n    tft.endWrite();\n\n    lv_disp_flush_ready(disp);\n}\n\n/* Reading input device (simulated encoder here) */\nbool read_encoder(lv_indev_drv_t * indev, lv_indev_data_t * data)\n{\n    static int32_t last_diff = 0;\n    int32_t diff = 0; /* Dummy - no movement */\n    int btn_state = LV_INDEV_STATE_REL; /* Dummy - no press */\n\n    data->enc_diff = diff - last_diff;;\n    data->state = btn_state;\n\n    last_diff = diff;\n\n    return false;\n}\n\nvoid setup()\n{\n\n    Serial.begin(115200); /* prepare for possible serial debug */\n\n    lv_init();\n\n#if USE_LV_LOG != 0\n    lv_log_register_print_cb(my_print); /* register print function for debugging */\n#endif\n\n    tft.begin(); /* TFT init */\n    tft.setRotation(1); /* Landscape orientation */\n\n    lv_disp_buf_init(&disp_buf, buf, NULL, LV_HOR_RES_MAX * 10);\n\n    /*Initialize the display*/\n    lv_disp_drv_t disp_drv;\n    lv_disp_drv_init(&disp_drv);\n    disp_drv.hor_res = 320;\n    disp_drv.ver_res = 240;\n    disp_drv.flush_cb = my_disp_flush;\n    disp_drv.buffer = &disp_buf;\n    lv_disp_drv_register(&disp_drv);\n\n    /*Initialize the (dummy) input device driver*/\n    lv_indev_drv_t indev_drv;\n    lv_indev_drv_init(&indev_drv);\n    indev_drv.type = LV_INDEV_TYPE_ENCODER;\n    indev_drv.read_cb = read_encoder;\n    lv_indev_drv_register(&indev_drv);\n\n    /* Create simple label */\n    lv_obj_t *label = lv_label_create(lv_scr_act(), NULL);\n    lv_label_set_text(label, \"Hello Arduino! (V7.0.X)\");\n    lv_obj_align(label, NULL, LV_ALIGN_CENTER, 0, 0);\n}\n\n\nvoid loop()\n{\n\n    lv_task_handler(); /* let the GUI do its work */\n    delay(5);\n}\n"}}}






Started logging.

<<<
Content-Length: 3344

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":19332,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\3_4-4_ESP32_TFT_eSPI-LVGL\\ESP32_TFT_eSPI","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","name":"ESP32_TFT_eSPI"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2742

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI/ESP32_TFT_eSPI.ino","languageId":"cpp","version":1,"text":"// Example for library:\n// Lv_arduino by Gabor Kiss-Vamosi\n#include <lvgl.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI(); /* TFT instance */\nstatic lv_disp_buf_t disp_buf;\nstatic lv_color_t buf[LV_HOR_RES_MAX * 10];\n\n#if USE_LV_LOG != 0\n/* Serial debugging */\nvoid my_print(lv_log_level_t level, const char * file, uint32_t line, const char * dsc)\n{\n\n    Serial.printf(\"%s@%d->%s\\r\\n\", file, line, dsc);\n    Serial.flush();\n}\n#endif\n\n/* Display flushing */\nvoid my_disp_flush(lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p)\n{\n    uint32_t w = (area->x2 - area->x1 + 1);\n    uint32_t h = (area->y2 - area->y1 + 1);\n\n    tft.startWrite();\n    tft.setAddrWindow(area->x1, area->y1, w, h);\n    tft.pushColors(&color_p->full, w * h, true);\n    tft.endWrite();\n\n    lv_disp_flush_ready(disp);\n}\n\n/* Reading input device (simulated encoder here) */\nbool read_encoder(lv_indev_drv_t * indev, lv_indev_data_t * data)\n{\n    static int32_t last_diff = 0;\n    int32_t diff = 0; /* Dummy - no movement */\n    int btn_state = LV_INDEV_STATE_REL; /* Dummy - no press */\n\n    data->enc_diff = diff - last_diff;;\n    data->state = btn_state;\n\n    last_diff = diff;\n\n    return false;\n}\n\nvoid setup()\n{\n\n    Serial.begin(115200); /* prepare for possible serial debug */\n\n    lv_init();\n\n#if USE_LV_LOG != 0\n    lv_log_register_print_cb(my_print); /* register print function for debugging */\n#endif\n\n    tft.begin(); /* TFT init */\n    tft.setRotation(1); /* Landscape orientation */\n\n    lv_disp_buf_init(&disp_buf, buf, NULL, LV_HOR_RES_MAX * 10);\n\n    /*Initialize the display*/\n    lv_disp_drv_t disp_drv;\n    lv_disp_drv_init(&disp_drv);\n    disp_drv.hor_res = 320;\n    disp_drv.ver_res = 240;\n    disp_drv.flush_cb = my_disp_flush;\n    disp_drv.buffer = &disp_buf;\n    lv_disp_drv_register(&disp_drv);\n\n    /*Initialize the (dummy) input device driver*/\n    lv_indev_drv_t indev_drv;\n    lv_indev_drv_init(&indev_drv);\n    indev_drv.type = LV_INDEV_TYPE_ENCODER;\n    indev_drv.read_cb = read_encoder;\n    lv_indev_drv_register(&indev_drv);\n\n    /* Create simple label */\n    lv_obj_t *label = lv_label_create(lv_scr_act(), NULL);\n    lv_label_set_text(label, \"Hello Arduino! (V7.0.X)\");\n    lv_obj_align(label, NULL, LV_ALIGN_CENTER, 0, 0);\n}\n\n\nvoid loop()\n{\n\n    lv_task_handler(); /* let the GUI do its work */\n    delay(5);\n}\n"}}}






Started logging.

<<<
Content-Length: 3343

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":9836,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\3_4-4_ESP32_TFT_eSPI-LVGL\\ESP32_TFT_eSPI","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI","name":"ESP32_TFT_eSPI"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2742

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-4_ESP32_TFT_eSPI-LVGL/ESP32_TFT_eSPI/ESP32_TFT_eSPI.ino","languageId":"cpp","version":1,"text":"// Example for library:\n// Lv_arduino by Gabor Kiss-Vamosi\n#include <lvgl.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI(); /* TFT instance */\nstatic lv_disp_buf_t disp_buf;\nstatic lv_color_t buf[LV_HOR_RES_MAX * 10];\n\n#if USE_LV_LOG != 0\n/* Serial debugging */\nvoid my_print(lv_log_level_t level, const char * file, uint32_t line, const char * dsc)\n{\n\n    Serial.printf(\"%s@%d->%s\\r\\n\", file, line, dsc);\n    Serial.flush();\n}\n#endif\n\n/* Display flushing */\nvoid my_disp_flush(lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p)\n{\n    uint32_t w = (area->x2 - area->x1 + 1);\n    uint32_t h = (area->y2 - area->y1 + 1);\n\n    tft.startWrite();\n    tft.setAddrWindow(area->x1, area->y1, w, h);\n    tft.pushColors(&color_p->full, w * h, true);\n    tft.endWrite();\n\n    lv_disp_flush_ready(disp);\n}\n\n/* Reading input device (simulated encoder here) */\nbool read_encoder(lv_indev_drv_t * indev, lv_indev_data_t * data)\n{\n    static int32_t last_diff = 0;\n    int32_t diff = 0; /* Dummy - no movement */\n    int btn_state = LV_INDEV_STATE_REL; /* Dummy - no press */\n\n    data->enc_diff = diff - last_diff;;\n    data->state = btn_state;\n\n    last_diff = diff;\n\n    return false;\n}\n\nvoid setup()\n{\n\n    Serial.begin(115200); /* prepare for possible serial debug */\n\n    lv_init();\n\n#if USE_LV_LOG != 0\n    lv_log_register_print_cb(my_print); /* register print function for debugging */\n#endif\n\n    tft.begin(); /* TFT init */\n    tft.setRotation(1); /* Landscape orientation */\n\n    lv_disp_buf_init(&disp_buf, buf, NULL, LV_HOR_RES_MAX * 10);\n\n    /*Initialize the display*/\n    lv_disp_drv_t disp_drv;\n    lv_disp_drv_init(&disp_drv);\n    disp_drv.hor_res = 320;\n    disp_drv.ver_res = 240;\n    disp_drv.flush_cb = my_disp_flush;\n    disp_drv.buffer = &disp_buf;\n    lv_disp_drv_register(&disp_drv);\n\n    /*Initialize the (dummy) input device driver*/\n    lv_indev_drv_t indev_drv;\n    lv_indev_drv_init(&indev_drv);\n    indev_drv.type = LV_INDEV_TYPE_ENCODER;\n    indev_drv.read_cb = read_encoder;\n    lv_indev_drv_register(&indev_drv);\n\n    /* Create simple label */\n    lv_obj_t *label = lv_label_create(lv_scr_act(), NULL);\n    lv_label_set_text(label, \"Hello Arduino! (V7.0.X)\");\n    lv_obj_align(label, NULL, LV_ALIGN_CENTER, 0, 0);\n}\n\n\nvoid loop()\n{\n\n    lv_task_handler(); /* let the GUI do its work */\n    delay(5);\n}\n"}}}